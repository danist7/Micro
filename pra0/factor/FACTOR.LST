Turbo Assembler	 Version 2.0	    02/08/19 18:46:47	    Page 1
factor.asm



      1				     ;*******************************************************************************
      2				     ; CALCULA EL PRODUCTO DEL FACTORIAL DE DOS	NUMEROS	QUE SE
      3				     ; ENCUENTRAN EN LAS POSICIONES DE MEMORIA 0 Y 1 DEL SEGMENTO DE
      4				     ; DATOS. EL VALOR DE CADA NUMERO DEBE SER INFERIOR	A 9. EL	RESULTADO
      5				     ; SE ALMACENA EN DOS PALABRAS DEL SEGMENTO	EXTRA, EN LA PRIMERA
      6				     ; PALABRA EL MENOS	SIGNIFICATIVO Y	EN LA SEGUNDA EL MAS
      7				     ; SIGNIFICATIVO. SE UTILIZA UNA RUTINA PARA CALCULAR EL FACTORIAL.
      8				     ;*******************************************************************************
      9
     10				     ; DEFINICION DEL SEGMENTO DE DATOS
     11
     12	0000			     DATOS SEGMENT
     13
     14	0000  02		     DATO_1  DB	    2
     15	0001  03		     DATO_2  DB	    3
     16
     17	0002			     DATOS ENDS
     18
     19
     20				     ; DEFINICION DEL SEGMENTO DE PILA
     21
     22	0000			     PILA    SEGMENT STACK "STACK"
     23	0000  40*(00)			 DB   40H DUP (0)
     24	0040			     PILA ENDS
     25
     26
     27				     ; DEFINICION DEL SEGMENTO EXTRA
     28
     29	0000			     EXTRA     SEGMENT
     30	0000  0000 0000			 RESULT	   DW 0,0		  ; 2 PALABRAS ( 4 BYTES )
     31	0004			     EXTRA ENDS
     32
     33
     34				     ; DEFINICION DEL SEGMENTO DE CODIGO
     35
     36	0000			     CODE    SEGMENT
     37					 ASSUME	CS:CODE, DS:DATOS, ES: EXTRA, SS:PILA
     38
     39	0000  0000		     FACT_DATO_1  DW	   0
     40
     41				     ; COMIENZO	DEL PROCEDIMIENTO PRINCIPAL
     42
     43	0002			     START PROC
     44					 ;INICIALIZA LOS REGISTROS DE SEGMENTO CON SUS VALORES
     45	0002  B8 0000s			 MOV AX, DATOS
     46	0005  8E D8			 MOV DS, AX
     47
     48	0007  B8 0000s			 MOV AX, PILA
     49	000A  8E D0			 MOV SS, AX
     50
     51	000C  B8 0000s			 MOV AX, EXTRA
     52	000F  8E C0			 MOV ES, AX
     53
     54					 ; CARGA EL PUNTERO DE PILA CON	EL VALOR MAS ALTO
     55	0011  BC 0040			 MOV SP, 64
     56
     57					 ; FIN DE LAS INICIALIZACIONES
Turbo Assembler	 Version 2.0	    02/08/19 18:46:47	    Page 2
factor.asm



     58
     59					 ;COMIENZO DEL PROGRAMA
     60	0014  A0 0000r			 MOV AL, DATO_1		     ;GUARDAMOS	FDATO1 EN AL PARA LA MULTIPLICACIÓN
     61	0017  F6 26 0001r		 MUL DATO_2		     ;AX=AL*DATO_2
     62	001B  8B C8			     MOV CX, AX			     ;ENTRADA DE LA RUTINA ES CX, COPIAMOS EL RESULTADO	DE  +
     63				     LA	MULTIPLICACIÓN
     64	001D  E8 000E			 CALL FACTOR
     65
     66					 ; ALMACENA EL RESULTADO
     67	0020  26: A3 0000r		 MOV RESULT, AX
     68	0024  26: 89 16	0002r		 MOV RESULT+2, DX
     69
     70					 ; FIN DEL PROGRAMA
     71	0029  B8 4C00			 MOV AX, 4C00H
     72	002C  CD 21			 INT 21H
     73
     74	002E			     START ENDP
     75				     ;_______________________________________________________________
     76				     ; SUBRUTINA PARA CALCULAR EL FACTORIAL DE UN NUMERO
     77				     ; ENTRADA CX=NUMERO
     78				     ; SALIDA AX=RESULTADO, DX=0 YA QUE	CL<=9
     79				     ;_______________________________________________________________
     80
     81	002E			     FACTOR PROC NEAR
     82	002E  B8 0001			 MOV AX, 1
     83	0031  83 F9 00			 CMP CX, 0
     84	0034  74 05			 JE FIN
     85	0036			     IR:
     86	0036  F7 E1			 MUL CX
     87	0038  49			 DEC CX
     88	0039  75 FB			 JNE IR
     89	003B			     FIN:
     90	003B  C3			 RET
     91	003C			     FACTOR ENDP
     92
     93				     ; FIN DEL SEGMENTO	DE CODIGO
     94	003C			     CODE ENDS
     95				     ; FIN DEL PROGRAMA	INDICANDO DONDE	COMIENZA LA EJECUCION
     96				     END START
Turbo Assembler	 Version 2.0	    02/08/19 18:46:47	    Page 3
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/08/19"
??FILENAME			  Text	 "factor  "
??TIME				  Text	 "18:46:47"
??VERSION			  Number 0200
@CPU				  Text	 0101H
@CURSEG				  Text	 CODE
@FILENAME			  Text	 FACTOR
@WORDSIZE			  Text	 2
DATO_1				  Byte	 DATOS:0000
DATO_2				  Byte	 DATOS:0001
FACTOR				  Near	 CODE:002E
FACT_DATO_1			  Word	 CODE:0000
FIN				  Near	 CODE:003B
IR				  Near	 CODE:0036
RESULT				  Word	 EXTRA:0000
START				  Near	 CODE:0002

Groups & Segments		  Bit Size Align  Combine Class

CODE				  16  003C Para	  none
DATOS				  16  0002 Para	  none
EXTRA				  16  0004 Para	  none
PILA				  16  0040 Para	  Stack	  STACK
