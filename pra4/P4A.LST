Turbo Assembler	 Version 2.0	    04/26/19 18:23:38	    Page 1
p4a.asm



      1				     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      2				     ;	     SBM 2016. Practica	4 - Ejercicio4a						     ;
      3				     ;	 Daniel	Santo-Tomás López							     ;
      4				     ;	 Lucía	Rivas Molina									    +
      5				     ;
      6				     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      7
      8	0000			     codigo SEGMENT
      9					     ASSUME cs : codigo
     10
     11					     ORG 256
     12
     13
     14	0100			     inicio:
     15	0100  8B 0E 0082		     mov cx, ds:[82h]						     ; Guardamos los	    +
     16				     posibles parámetros de entrada
     17
     18	0104  B8 0000			     mov ax, 0
     19	0107  8E C0			     mov es, ax
     20	0109  26: 8B 1E	015C		     mov bx, es:[57h*4]			     ;Comprobamos si el	driver está instalado
     21	010E  83 FB 00			     cmp bx, 0h
     22	0111  74 19			     je	noinst						     ; Si no está instalado,	    +
     23				     saltamos
     24
     25	0113  B8 4B4A			     mov ax,4B4AH				     ; Comprobamos la firma para saber si   +
     26				     está realmente instalado
     27	0116  2E: 3B 47	FE		     cmp ax, cs:[bx-2]
     28	011A  75 10			     jne noinst						     ; Si la firma es incorrecta,   +
     29				     saltamos(no está instalado)
     30	011C  BA 014Cr			     mov dx, OFFSET INST			     ; Guardamos el mensaje de ya instalado +
     31				     en	DX
     32
     33	011F  80 F9 2F			     cmp cl , 2Fh				     ; Si no hay parámetros de	entrada,    +
     34				     saltamos a	la impresión
     35	0122  75 18			     jne texto
     36	0124  80 FD 44			     cmp ch, 44h					     ; Si el parámetro	no es para  +
     37				     desinstalar , saltamos a la impresión
     38	0127  75 13			     jne texto						     ; En otro caso , saltamos a la +
     39				     rutina
     40	0129  E9 0290			     jmp desinstalar
     41
     42
     43	012C				     noinst:
     44	012C  BA 015Fr				     mov dx, OFFSET DINST	     ; Guardamos el mensaje de no instalado en DX
     45	012F  80 F9 2F				     cmp cl , 2Fh			     ; Si no hay parámetros de	entrada,    +
     46				     saltamos a	la impresión
     47	0132  75 08				     jne texto
     48	0134  80 FD 49				     cmp ch, 49h				     ; Si el parámetro	no es para  +
     49				     instalar ,	saltamos a texto
     50	0137  75 03				     jne texto
     51	0139  E9 0239				     jmp instalar			     ; En otro caso , saltamos a la rutina
     52
     53
     54	013C				     texto:
     55	013C  B4 09				     MOV AH, 9					     ;Imprimimos el mensaje de	    +
     56				     instalado o no instalado
     57	013E  CD 21				     INT 21h
Turbo Assembler	 Version 2.0	    04/26/19 18:23:38	    Page 2
p4a.asm



     58
     59	0140  BA 0175r				     MOV DX, OFFSET MENSAJE	     ; Imprimimos el resto y salimos
     60	0143  B4 09				     MOV AH, 9
     61	0145  CD 21				     INT 21h
     62
     63	0147				     fin:
     64	0147  B8 4C00				     MOV AX, 4C00H
     65	014A  CD 21				     INT 21H
     66
     67				     ; Variables globales
     68	014C  44 52 49 56 45 52	20+  INST DB "DRIVER INSTALADO",13,10,'$'
     69	      49 4E 53 54 41 4C	41+
     70	      44 4F 0D 0A 24
     71	015F  44 52 49 56 45 52	20+  DINST DB "DRIVER NO INSTALADO",13,10,'$'
     72	      4E 4F 20 49 4E 53	54+
     73	      41 4C 41 44 4F 0D	0A+
     74	      24
     75	0175  47 52 55 50 4F 20	32+  MENSAJE DB	"GRUPO 26, LUCIA RIVAS Y DANIEL	SANTO-TOMAS",13,10,"EJECUTAR CON /I PARA INSTALAR EL+
     76	      36 2C 20 4C 55 43	49+  DRIVER Y CON /D PARA DESINSTALARLO",13,10,'$'
     77	      41 20 52 49 56 41	53+
     78	      20 59 20 44 41 4E	49+
     79	      45 4C 20 53 41 4E	54+
     80	      4F 2D 54 4F 4D 41	53+
     81	      0D 0A 45 4A 45 43	55+
     82	      54 41 52 20 43 4F	4E+
     83	      20 2F 49 20 50 41	52+
     84	      41 20 49 4E 53 54	41+
     85	      4C 41 52 20 45 4C	20+
     86	      44 52 49 56 45 52	20+
     87	      59 20 43 4F 4E 20	2F+
     88	      44 20 50 41 52 41	20+
     89	      44 45 53 49 4E 53	54+
     90	      41 4C 41 52 4C 4F	0D+
     91	      0A 24
     92	01E7  0100*(??)		     INVERSA DB	256 dup	(?)
     93	02E7  4C 4D 4E 4F 50 51	52+  MATRIZ_POLIBIO DB 'LMNOPQ', 'RSTUVW', 'XYZ012','345678', '9ABCDE',	'FGHIJK'
     94	      53 54 55 56 57 58	59+
     95	      5A 30 31 32 33 34	35+
     96	      36 37 38 39 41 42	43+
     97	      44 45 46 47 48 49	4A+
     98	      4B
     99				     ; Rutina de servicio a la interrupción
    100	030B			     rsi PROC FAR
    101
    102	030B  50 56 51 53 52		     push ax si	cx bx dx						     ; Guardamos los+
    103				     registros
    104
    105
    106	0310  80 FC 11			     cmp AH, 11H
    107	0313  74 2A			     je	once
    108	0315  80 FC 10			     cmp AH, 10h
    109	0318  75 55			     jne final
    110
    111	031A  8B F2			     mov si,dx
    112	031C  B7 00			     mov bh, 0h
    113	031E				     diez:
    114	031E  8A 1C				     mov bl, ds:[si]
Turbo Assembler	 Version 2.0	    04/26/19 18:23:38	    Page 3
p4a.asm



    115	0320  46				     inc si
    116	0321  80 FB 24				     cmp bl, 24h			     ; Si en dl	está el dolar,	salta a	fin
    117	0324  74 49				     je	final
    118	0326  03 DB				     add bx, bx				     ; Multiplicamos por 2, hay	dos	    +
    119				     elementos por posición
    120
    121	0328  2E: 8A 97	01E8r			     mov dl, INVERSA[bx+1]	     ; Accedemos al primer número y lo	imprimimos
    122	032D  B4 02				     mov ah, 2				     ; Imprimimos el caracter por pantalla
    123	032F  CD 21				     int 21h
    124
    125	0331  2E: 8A 97	01E7r			     mov dl, INVERSA[bx]     ; Accedemos al segundo número y lo imprimimos
    126	0336  B4 02				     mov ah, 2				     ; Imprimimos el caracter por pantalla
    127	0338  CD 21				     int 21h
    128	033A  EB E2				     jmp diez
    129
    130	033C  EB 31 90			     jmp final
    131
    132	033F				     once:
    133	033F  8B DA				     mov bx,dx
    134	0341					     bucle:
    135	0341  8A 17					     mov dl, ds:[bx]	     ; Guardamos los caracteres	a traducir
    136	0343  43					     inc bx
    137	0344  8A 37					     mov dh, ds:[bx]
    138	0346  43					     inc bx
    139	0347  80 FA 24					     cmp dl, 24h			     ; Si en dl	está el dolar,	    +
    140				     salta a fin
    141	034A  74 23					     je	final
    142	034C  80 EA 30					     sub dl, 30h			     ; Pasa los	numeros	de ascii a  +
    143				     decimal
    144	034F  80 EE 30					     sub dh, 30h
    145	0352  FE CA					     dec dl				     ; restamos	uno para hacer los  +
    146				     cálculos
    147	0354  FE CE					     dec dh
    148
    149	0356  8A C2					     mov al, dl				     ; Multiplicamos la	fila por 6 y+
    150				     la	sumamos	a la columna
    151	0358  B1 06					     mov cl, 6h
    152	035A  F6 E1					     mul cl
    153	035C  8A D6					     mov dl, dh
    154	035E  B6 00					     mov dh, 0h
    155	0360  03 C2					     add ax, dx
    156	0362  8B F0					     mov si, ax				     ; Se guarda el resultado en si
    157
    158	0364  2E: 8A 94	02E7r				     mov dl, MATRIZ_POLIBIO[si]		     ; Accedemos a la posición	de  +
    159				     la	matriz dada por	si, y guardamos	su contenido en	dl (es un caracter ascii)
    160
    161	0369  B4 02					     mov ah, 2				     ; Imprimimos el caracter por   +
    162				     pantalla
    163	036B  CD 21					     int 21h
    164
    165	036D  EB D2					     jmp bucle
    166	036F				     final:
    167
    168	036F  5A 5B 59 5E 58		     pop dx bx cx si ax
    169	0374  CF			     iret
    170	0375			     rsi ENDP
    171
Turbo Assembler	 Version 2.0	    04/26/19 18:23:38	    Page 4
p4a.asm



    172
    173	0375			     instalar PROC FAR
    174
    175	0375  BE 0000			     mov si, 0h
    176	0378  B0 31			     mov al, 31h
    177	037A  B4 31			     mov ah, 31h
    178	037C				     bucle2:
    179	037C  BB 0000				     mov bx, 0h
    180	037F  2E: 8A 9C	02E7r			     mov bl, MATRIZ_POLIBIO[si]			     ; Guardamos la letra cuya	    +
    181				     codificación vamos a guardar
    182	0384  02 DB				     add bl, bl							     ; Multiplicamos+
    183				     por dos, ya que por cada letra hay	dos numeros de un byte
    184	0386  46				     inc si
    185
    186	0387  2E: 88 87	01E7r			     mov INVERSA[bx], al
    187	038C  2E: 88 A7	01E8r			     mov INVERSA[bx+1],ah
    188	0391  FE C0				     inc al
    189	0393  3C 37				     cmp al, 37h
    190	0395  75 E5				     jne bucle2
    191	0397  80 FC 36				     cmp ah, 36h
    192	039A  74 06				     je	fuera
    193	039C  B0 31				     mov al, 31h
    194	039E  FE C4				     inc ah
    195	03A0  EB DA				     jmp bucle2
    196
    197	03A2			     fuera:
    198
    199	03A2  B8 0000			     mov ax, 0
    200	03A5  8E C0			     mov es, ax
    201	03A7  B8 030Br			     mov ax, OFFSET rsi
    202	03AA  8C CB			     mov bx, cs
    203	03AC  FA			     cli
    204	03AD  26: A3 015C		     mov es:[57h*4], ax
    205	03B1  26: 89 1E	015E		     mov es:[57h*4+2], bx
    206	03B6  FB			     sti
    207	03B7  BA 0375r			     mov dx, OFFSET instalar
    208	03BA  CD 27			     int 27h ; Acaba y deja residente ;	PSP, variables y rutina	rsi.
    209
    210	03BC			     instalar ENDP
    211
    212	03BC			     desinstalar PROC FAR
    213	03BC  50 53 51 1E 06		     push ax bx	cx ds es
    214
    215	03C1  B9 0000			     mov cx, 0
    216	03C4  8E D9			     mov ds, cx
    217	03C6  8E 06 015E		     mov es, ds:[57h*4+2]
    218	03CA  26: 8B 1E	002C		     mov bx, es:[2Ch]
    219
    220	03CF  B4 49			     mov ah, 49h
    221	03D1  CD 21			     int 21h
    222	03D3  8E C3			     mov es, bx
    223	03D5  CD 21			     int 21h
    224
    225	03D7  FA			     cli
    226	03D8  89 0E 015C		     mov ds:[57h*4], cx
    227	03DC  89 0E 015E		     mov ds:[57h*4+2], cx
    228	03E0  FB			     sti
Turbo Assembler	 Version 2.0	    04/26/19 18:23:38	    Page 5
p4a.asm



    229
    230	03E1  07 1F 59 5B 58		     pop es ds cx bx ax
    231
    232	03E6  B8 4C00			     MOV AX, 4C00H
    233	03E9  CD 21			     INT 21H
    234
    235	03EB			     desinstalar ENDP
    236
    237	03EB			     codigo ENDS
    238				     END inicio
Turbo Assembler	 Version 2.0	    04/26/19 18:23:38	    Page 6
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "04/26/19"
??FILENAME			  Text	 "p4a	  "
??TIME				  Text	 "18:23:38"
??VERSION			  Number 0200
@CPU				  Text	 0101H
@CURSEG				  Text	 CODIGO
@FILENAME			  Text	 P4A
@WORDSIZE			  Text	 2
BUCLE				  Near	 CODIGO:0341
BUCLE2				  Near	 CODIGO:037C
DESINSTALAR			  Far	 CODIGO:03BC
DIEZ				  Near	 CODIGO:031E
DINST				  Byte	 CODIGO:015F
FIN				  Near	 CODIGO:0147
FINAL				  Near	 CODIGO:036F
FUERA				  Near	 CODIGO:03A2
INICIO				  Near	 CODIGO:0100
INST				  Byte	 CODIGO:014C
INSTALAR			  Far	 CODIGO:0375
INVERSA				  Byte	 CODIGO:01E7
MATRIZ_POLIBIO			  Byte	 CODIGO:02E7
MENSAJE				  Byte	 CODIGO:0175
NOINST				  Near	 CODIGO:012C
ONCE				  Near	 CODIGO:033F
RSI				  Far	 CODIGO:030B
TEXTO				  Near	 CODIGO:013C

Groups & Segments		  Bit Size Align  Combine Class

CODIGO				  16  03EB Para	  none
