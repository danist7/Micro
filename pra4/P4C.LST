Turbo Assembler	 Version 2.0	    04/26/19 18:55:07	    Page 1
p4c.asm



      1				     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      2				     ;	     SBM 2016. Practica	4 - Ejercicio4c						     ;
      3				     ;	 Daniel	Santo-Tomás López							     ;
      4				     ;	 Lucía	Rivas Molina									    +
      5				     ;
      6				     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      7
      8	0000			     codigo SEGMENT
      9					     ASSUME cs : codigo
     10
     11					     ORG 256
     12
     13
     14	0100			     inicio:
     15	0100  E9 0239			     jmp instalar
     16
     17				     ; Variables globales
     18	0103  44 52 49 56 45 52	20+  INST DB "DRIVER INSTALADO",13,10,'$'
     19	      49 4E 53 54 41 4C	41+
     20	      44 4F 0D 0A 24
     21	0116  44 52 49 56 45 52	20+  DINST DB "DRIVER NO INSTALADO",13,10,'$'
     22	      4E 4F 20 49 4E 53	54+
     23	      41 4C 41 44 4F 0D	0A+
     24	      24
     25	012C  47 52 55 50 4F 20	32+  MENSAJE DB	"GRUPO 26, LUCIA RIVAS Y DANIEL	SANTO-TOMAS",13,10,"EJECUTAR CON /I PARA INSTALAR EL+
     26	      36 2C 20 4C 55 43	49+  DRIVER Y CON /D PARA DESINSTALARLO",13,10,'$'
     27	      41 20 52 49 56 41	53+
     28	      20 59 20 44 41 4E	49+
     29	      45 4C 20 53 41 4E	54+
     30	      4F 2D 54 4F 4D 41	53+
     31	      0D 0A 45 4A 45 43	55+
     32	      54 41 52 20 43 4F	4E+
     33	      20 2F 49 20 50 41	52+
     34	      41 20 49 4E 53 54	41+
     35	      4C 41 52 20 45 4C	20+
     36	      44 52 49 56 45 52	20+
     37	      59 20 43 4F 4E 20	2F+
     38	      44 20 50 41 52 41	20+
     39	      44 45 53 49 4E 53	54+
     40	      41 4C 41 52 4C 4F	0D+
     41	      0A 24
     42	019E  0100*(??)		     INVERSA DB	256 dup	(?)
     43	029E  00		     CONTADOR DB 0H
     44	029F  0000		     CARACTER DW 0H
     45	02A1  50 4F 24		     ENTRADA DB	'PO','$'
     46	02A4  4C 4D 4E 4F 50 51	52+  MATRIZ_POLIBIO DB 'LMNOPQ', 'RSTUVW', 'XYZ012','345678', '9ABCDE',	'FGHIJK'
     47	      53 54 55 56 57 58	59+
     48	      5A 30 31 32 33 34	35+
     49	      36 37 38 39 41 42	43+
     50	      44 45 46 47 48 49	4A+
     51	      4B
     52				     ; Rutina de servicio a la interrupción
     53	02C8			     rsi PROC FAR
     54
     55	02C8  50 56 51 53 52		     push ax si	cx bx dx						     ; Guardamos los+
     56				     registros
     57
Turbo Assembler	 Version 2.0	    04/26/19 18:55:07	    Page 2
p4c.asm



     58	02CD  2E: 80 3E	029Er 12	     cmp CONTADOR,12H
     59	02D3  74 08			     je	traduce
     60
     61	02D5  2E: FE 06	029Er		     inc CONTADOR
     62	02DA  EB 31 90			     jmp final
     63
     64	02DD			     traduce:
     65	02DD  B0 00			     mov al, 0h
     66	02DF  2E: A2 029Er		     mov CONTADOR, al
     67
     68	02E3  2E: 8B 36	029Fr		     mov si, CARACTER
     69
     70	02E8  B7 00			     mov bh, 0h
     71	02EA  2E: 8A 9C	02A1r		     mov bl, ENTRADA[si]
     72	02EF  2E: FF 06	029Fr		     inc CARACTER
     73	02F4  80 FB 24			     cmp bl, 24h			     ; Si en dl	está el dolar,	salta a	desinstalar
     74	02F7  74 1A			     je	desinstalar
     75	02F9  03 DB			     add bx, bx				     ; Multiplicamos por 2, hay	dos elementos por   +
     76				     posición
     77
     78	02FB  2E: 8A 97	019Fr		     mov dl, INVERSA[bx+1]	     ; Accedemos al primer número y lo	imprimimos
     79	0300  B4 02			     mov ah, 2				     ; Imprimimos el caracter por pantalla
     80	0302  CD 21			     int 21h
     81
     82	0304  2E: 8A 97	019Er		     mov dl, INVERSA[bx]     ; Accedemos al segundo número y lo imprimimos
     83	0309  B4 02			     mov ah, 2				     ; Imprimimos el caracter por pantalla
     84	030B  CD 21			     int 21h
     85
     86	030D			     final:
     87
     88	030D  5A 5B 59 5E 58		     pop dx bx cx si ax
     89	0312  CF			     iret
     90
     91	0313			     desinstalar:
     92
     93	0313  B9 0000			     mov cx, 0
     94	0316  8E D9			     mov ds, cx
     95	0318  8E 06 0072		     mov es, ds:[1Ch*4+2]
     96	031C  26: 8B 1E	002C		     mov bx, es:[2Ch]
     97
     98	0321  B4 49			     mov ah, 49h
     99	0323  CD 21			     int 21h
    100	0325  8E C3			     mov es, bx
    101	0327  CD 21			     int 21h
    102
    103	0329  FA			     cli
    104	032A  89 0E 0070		     mov ds:[1Ch*4], cx
    105	032E  89 0E 0072		     mov ds:[1Ch*4+2], cx
    106	0332  FB			     sti
    107
    108	0333  5A 5B 59 5E 58		     pop dx bx cx si ax
    109
    110	0338  EB 49 90			     jmp instalar2
    111
    112
    113	033B			     rsi ENDP
    114
Turbo Assembler	 Version 2.0	    04/26/19 18:55:07	    Page 3
p4c.asm



    115	033B			     rsi2 PROC FAR
    116	033B  CF			     iret
    117	033C			     rsi2 ENDP
    118
    119	033C			     instalar PROC FAR
    120
    121	033C  BE 0000			     mov si, 0h
    122	033F  B0 31			     mov al, 31h
    123	0341  B4 31			     mov ah, 31h
    124	0343				     bucle2:
    125	0343  BB 0000				     mov bx, 0h
    126	0346  2E: 8A 9C	02A4r			     mov bl, MATRIZ_POLIBIO[si]			     ; Guardamos la letra cuya	    +
    127				     codificación vamos a guardar
    128	034B  02 DB				     add bl, bl							     ; Multiplicamos+
    129				     por dos, ya que por cada letra hay	dos numeros de un byte
    130	034D  46				     inc si
    131
    132	034E  2E: 88 87	019Er			     mov INVERSA[bx], al
    133	0353  2E: 88 A7	019Fr			     mov INVERSA[bx+1],ah
    134	0358  FE C0				     inc al
    135	035A  3C 37				     cmp al, 37h
    136	035C  75 E5				     jne bucle2
    137	035E  80 FC 36				     cmp ah, 36h
    138	0361  74 06				     je	fuera
    139	0363  B0 31				     mov al, 31h
    140	0365  FE C4				     inc ah
    141	0367  EB DA				     jmp bucle2
    142
    143	0369			     fuera:
    144
    145	0369  B8 0000			     mov ax, 0
    146	036C  8E C0			     mov es, ax
    147	036E  B8 02C8r			     mov ax, OFFSET rsi
    148	0371  8C CB			     mov bx, cs
    149	0373  FA			     cli
    150	0374  26: A3 0070		     mov es:[1Ch*4], ax
    151	0378  26: 89 1E	0072		     mov es:[1Ch*4+2], bx
    152	037D  FB			     sti
    153	037E  BA 033Cr			     mov dx, OFFSET instalar
    154	0381  CD 27			     int 27h ; Acaba y deja residente ;	PSP, variables y rutina	rsi.
    155
    156	0383			     instalar ENDP
    157
    158	0383			     instalar2 PROC FAR
    159	0383  B8 0000		     mov ax, 0
    160	0386  8E C0			     mov es, ax
    161	0388  B8 033Br			     mov ax, OFFSET rsi2
    162	038B  8C CB			     mov bx, cs
    163	038D  FA			     cli
    164	038E  26: A3 0070		     mov es:[1Ch*4], ax
    165	0392  26: 89 1E	0072		     mov es:[1Ch*4+2], bx
    166	0397  FB			     sti
    167	0398  BA 0383r			     mov dx, OFFSET instalar2
    168	039B  CD 27			     int 27h ; Acaba y deja residente ;	PSP, variables y rutina	rsi.
    169
    170	039D			     instalar2 ENDP
    171
Turbo Assembler	 Version 2.0	    04/26/19 18:55:07	    Page 4
p4c.asm



    172
    173
    174	039D			     codigo ENDS
    175				     END inicio
Turbo Assembler	 Version 2.0	    04/26/19 18:55:07	    Page 5
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "04/26/19"
??FILENAME			  Text	 "p4c	  "
??TIME				  Text	 "18:55:07"
??VERSION			  Number 0200
@CPU				  Text	 0101H
@CURSEG				  Text	 CODIGO
@FILENAME			  Text	 P4C
@WORDSIZE			  Text	 2
BUCLE2				  Near	 CODIGO:0343
CARACTER			  Word	 CODIGO:029F
CONTADOR			  Byte	 CODIGO:029E
DESINSTALAR			  Near	 CODIGO:0313
DINST				  Byte	 CODIGO:0116
ENTRADA				  Byte	 CODIGO:02A1
FINAL				  Near	 CODIGO:030D
FUERA				  Near	 CODIGO:0369
INICIO				  Near	 CODIGO:0100
INST				  Byte	 CODIGO:0103
INSTALAR			  Far	 CODIGO:033C
INSTALAR2			  Far	 CODIGO:0383
INVERSA				  Byte	 CODIGO:019E
MATRIZ_POLIBIO			  Byte	 CODIGO:02A4
MENSAJE				  Byte	 CODIGO:012C
RSI				  Far	 CODIGO:02C8
RSI2				  Far	 CODIGO:033B
TRADUCE				  Near	 CODIGO:02DD

Groups & Segments		  Bit Size Align  Combine Class

CODIGO				  16  039D Para	  none
